sudo: false
language: generic
addons:
  homebrew:
    packages:
      - pyenv
matrix:
  include:
    - os: linux
      language: python
      python: "3.5"
    - os: linux
      language: python
      python: "3.6"
    - os: linux
      dist: xenial
      sudo: true
      language: python
      python: "3.7"
    - os: linux
      language: python
      python: "pypy3.5-5.8.0"
    - os: osx
      language: generic
      env: TRAVIS_PYTHON_VERSION="3.5"
    - os: osx
      language: generic
      env: TRAVIS_PYTHON_VERSION="3.6"
    - os: osx
      language: generic
      env: TRAVIS_PYTHON_VERSION="3.7"

before_install: |
  set -e
  if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
    TRAVIS_PYTHON_VERSION="$(pyenv install --list | grep -E " ${TRAVIS_PYTHON_VERSION}(\.[0-9brc]+)+$" | tail -n 1 | sed -e 's/^[[:space:]]*//')"
    pyenv install "${TRAVIS_PYTHON_VERSION}"
    export PATH="${HOME}/.pyenv/versions/${TRAVIS_PYTHON_VERSION}/bin:${PATH}"
  fi
  set +e

install:
  - pip install -U pip
  - pip install -U -r dev_requirements.txt
  # git repositories for testing
  - git clone https://github.com/mbdevpl/argunparse ../argunparse
  - git clone https://github.com/mbdevpl/transpyle ../transpyle
  - git clone https://github.com/mbdevpl/typed-astunparse ../typed-astunparse

script:
  - python -m coverage run --branch --source . -m unittest -v

after_success:
  - python -m coverage report --show-missing
  - codecov

before_deploy:
  - pip3 install -U --user version_query || pip3 install -U version_query
  - wget https://gist.githubusercontent.com/mbdevpl/46d458350f0c9cc7d793b67573e01f7b/raw/prepare_bintray_deployment.py
  - python3 prepare_bintray_deployment.py "$TRAVIS_OS_NAME-python$TRAVIS_PYTHON_VERSION" "dist/*.tar.gz" "dist/*.whl" "dist/*.zip"

deploy:
  - provider: bintray
    file: ".bintray.json"
    user: "mbdevpl"
    key:
      secure: "BHlE7nIkqe3PXz39uvhJO/eEwebefR9WM1PfvkINYkUptiErXy3scktM0hBuzDr2ndpwxsK8rZzjpT5+XZyCddjohhJv2in9aMGuKoC00g57cMLWNcealG8aibNAHO/mwAFmJWyJn0Q10WtFxTgtkZt+iBJPWiT/dLysm8LZ1ayzzmGoL8zdDTP1TIZycWNuz1CdmwHzgqhWLuOPl9zINYHoRXizW4KHjxCuh0aX7SJ+dqdtUpuikEoi6NLdEPFUV0a28iS1Gyp0V3Xd5e2HCr5VD+QKpR2SChweYeu39EOwp4V4emywX4l2WYLcesWA+1e+dGwgW/gNwIIgnHIPfj7Vu7wXWouPsji3Rls53PzoluOwqHD3I8uPoAeWhcabv0jCMu3wj6akJ+WwA0JJIwsY7SqjAXvtt8K/g2+s87XgyezIvnkpfpGllRSjug24UuEnqrWZjR41+jZL9nvDkLub26nJD1nzBMPx2PfHZJiz/JjEQLaQlDRpF+6dBol43T0UWwQRh92/GQwrnyj61gzsMVUivcNQCmiroBajuQwcyv/oCe269PJATO2jPsDwy11FriW/TUHL7YkScWRt3OIUNmNVRZCjEbpMVrnExA+4Hg7FUtR/RQZjBbJ9QCyfsgU1VXRMFPdSxPAKDpp+aJJLpEctQ2XGej099NP9n+4="
    on:
      all_branches: true
    skip_cleanup: true

notifications:
  slack:
    secure: "dYQlnEBR7Ae2Wvf4/Ja1ZwsEPY85cJj4b1UmG4fUYzwk3w6ttxnn/30oqxArE2Nj4HdU6PkbmR+qhwJucRj+/Pcqy09xlJacHjmJkC9HxbvNS7gH5v/AMLD+ioK5dvBoWFwulAdAoije7qXZR4K7NTSk4uc20qxo38N7WVmr4p8zkpxgPrVFoR0OhbHOFfQzhWXKNUY8AK1zyGG+lnQsr6GFOKGc01gw0OLfzOfaWjw+aU4+mNSpEWnl2eEgMZfwCyqSKgGC6hDwv1fC8ZkpMTpj50JxoS/iCnxasUuxSeoW/Bl3Xtnhc0IHyEuyjzQiptIvDqxNFfin2PyfcTPeNc/w+QDQQWMuKrX/6eTOqhO5MQKo8DJ9EamCL1YCSmmbaugCfIuyO4mwuUihaNv9C2e70tAyLK6qA8xHCnzacYTsy2UF1YJF24kA1RwtHO//32SKVqhpfFgHvwfUPyFnnla4rFP8TpI2YsjUv9kMHCxJ4PHxe+Nq2jWjN27H8+8ZUBpRhKXVi24Jiov071HTBCUkf018PoW9H5aGDjq2kVKEDbRp4FTT34erQMaWtC+R/0PQHnSqAA1sN5bF+IHMvghPbiD5f/LVL+cD5LliP/68VJUGOGfn3V3BpcZtKyLMKM6ssZZ8+F0R+h7wTuLnHfrBzxAV23NCZGbncG0ucVU="
  email: false
